package ComercioElectronico.ejercicio2.domain;

import java.util.HashMap;

public class Carrito {

    private Long id;
    private Cliente client;
    private HashMap<Producto, Integer> products;

    private static Long autoGeneratedID = 0l;

    public Carrito() {
    }

    public Carrito(Cliente client) {
        this.id = autoGeneratedID();
        this.client = client;
        this.products = new HashMap<>();
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Cliente getClient() {
        return this.client;
    }

    public void setClient(Cliente client) {
        this.client = client;
    }

    public HashMap<Producto,Integer> getOrder() {
        return this.products;
    }

    public void setOrder(HashMap<Producto,Integer> order) {
        this.products = order;
    }

    public void addProduct(Producto prod, int qty){
        if(prod.getStock() < qty){
            System.out.println("Solo quedan " + prod.getStock() + " productos en stock");
        } else if(this.getOrder().containsKey(prod)){
            System.out.println("El producto ya esta en su carrito");
        } else {
            this.getOrder().put(prod, qty);
            prod.buy(qty);;
        }
    }

    public void removeProduct(Producto prod){
        if (this.getOrder().containsKey(prod)){
            this.getOrder().remove(prod);
        } else {
            System.out.println("El producto no esta en su carrito");
        }
    }

    public void modifyQty(Producto prod, int qty){
        if(prod.getStock() < qty){
            System.out.println("Solo quedan " + prod.getStock() + " productos en stock");
        } else {
            this.getOrder().put(prod, this.getOrder().get(prod) + qty);
            prod.buy(qty);
        }
    }

    private static Long autoGeneratedID(){
        return ++ autoGeneratedID;
    }

    public void carritoToString(){
        this.getOrder().forEach((key, value) ->{
            System.out.println(key.getNombre() + " - cant: " + value);
        });
    }
}